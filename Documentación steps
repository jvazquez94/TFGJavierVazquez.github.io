STEP 0.

Se tiene que añadir el script de aframe en el <head> para que se aplique todo el framework.
<a-scene> sw añade en el <body> para poder cargar toda la config que va a requerir los componentes de aframe.

Añadiendo una entidad:
Entidades primitivas de aframe: box, cylinder, plane y sphere.
Atributos a destacar <a-box>:
 - rotation
 - position
 - scale
 - color
 - depth
 - fog
 - height
 - metalness
 - roughness
 - width
 - src
 
Entidad a 3D:
La dsitancia se mide en metro, por lo que hay que tener cuidado porque visualment, por ejemplo, una distancia de 10 sin usar VR puede ser distinto que usandolas;
pudiendo aparecer como algo muy grande dentro de la escena.

Padres a hijos:
En la escena podemos añadir dentro de una entidad otra para que este en herencia con ella. Si se modifica la psoition por ejemplo del padre, la del hijo tambien se ve afectada.

Añadir un eviroment:
Con el script: "https://unpkg.com/aframe-environment-component/dist/aframe-environment-component.min.js" podemos añadir diferentes fondos/entornos a nuestra escena.
En la pagina de github de los desarrolladores podemos ver diferentes tupos: forest, egypt, contact, goldmine, poison, japan, tron, volcano, osiris, default...
Después de añadir ese script en la escena se añade : <a-entity environment="preset: forest; dressAmount: 500" o el numero de elementos que sea.

Añadir una textura:
Para añadir una textura a un component simplemente tenemos que usar el atributo src y añadir la imagen que tengamos como textura. Recuerda que va por debajo del
color que tenga aplicado la entidad.

Asset Management System:
Se usa para la puesta en escena. A través de assets, audio, imagens y video podemos recrear o interactuar en el entorno par aañadir cosas. Para más info buscar
página en la docu.

Añadir un background a la escena:
Para añadir un background se usa la entidad primitiva sky, pero se puede hacer con imagenes. Para ello podemos añadirlo directamente como src o agrgar un <a-assets> 
<img id="sdfsd" src="dklsjfsl"> despues en el elemento simplemente en src añadimos la etiqueta #"id" que hemos puesto en ela img en a-assets en id.
Vale para todo no solo para sky.

Añadir un ground:
Para añadir un suelo usamos el elemento del plano y hacemos como hemos explicado arriba.

Ajuste de iluminación:
Con la etioqueta <a-lights> podemos establecer iluminación en la escena. Por defecto añade una, si noestaría todo oscuro. Puede ser de ambiente o direccional.
Podemos añadir puntual lights que funcionan como bombillas a lo largo de la escena.
<a-light type="ambien o point" (una de las dos) intensity, color, position...
Cuiado con jugar con mucha intensidad puede llegar a sobreilumanr los materiales y no poder ver bien la textura, dependiendo donde la pongas se generan sombras
en los componentes.

Añadir animación.
Podemos añadir animación a una entidad con animation. Propiedades que tiene este built-in: property, from, to, isRawProperty, type, dely, dir, loop... Ver docu animation API.
De esta forma estamos desplazando en la propiedad sobre el eje Y, jacia 2.2 que son como 20 centrimetros mayor, teniendo una direccion alternativa para repetir de arriba abajo
y con una duracion de 2000 ms y con loop infinito. -> <a-box animation="property: object3D.position.y; to: 2.2; dir: alternative; dur: 2000; loop: true" ...></..>

Añadir interacción:
Se usa el built-in de cursor para aplicar interaccion con los elementos. Hay que crearlo como hijo de la camara. Por lo que debemos crear el componente camara y
a continuación cursor como su hijo.

 ->CURSOR:
   Es un componente de raycaster. Y escucha eventos y provee estados para ser ejecutados como: mousedown, mouseup, mouseenter, mouseleave y click events. 
   Se usa el raycaster-intersection y raycaster-intersection-cleared para capturar la entidad intersectada mas cercana.
   Se recomienda usar el componente showLine del raycaster para visualizar mejor las acciones del cursor.
   
   El uso del raycaster es para seleccionar los elementos de la escena que quieres que puedan tener animacion. En este caso lo que hay que hacer es añadir el atributo
   raycaster="objects: .clickable" (o lo que quieras) y luego en los objetos añadir la clase con esa etiqueta. Los objetos que no tengan esa etiqueta no produce
   animación.
   
   Imagenes sobre los eventos y propiedades del cursor*
   --------------------------------------------------------------------------------------------------------------------------------------------------------------------
  STEP PREV. 
  
  Por problemas deje un mes esto, retomamos con curso de youtube para WebVR con aframe, ya que me estaba liando yo solo con la documentación que hay en la página oficial.
  
  Project name in glitch: brawny-agate-dormouse
  
  1. Basic Primitives And HTML Attributes (A-Frame Tutorial - WebVR)  
  Lo primero que inserta en la escena es una caja, hay que tener en cuenta que de manera por defecto es decir: <a-box></..> no aparecería nada en el browser ya que
  la camara está en primera persona por defecto en la misma posición de la caja. 
  Si accedemos al menú de visualizar en 3D podemos analizar la escena y movernos por ella, comprobando que la caja está ahí. Para moverte por la escena 3D: Si clicamos
  y mantenemos el mouse hacia abajo veremos la caja justo al lado (buscarlo si simplemente hacia abajo no está). Para alejarnos de la caja y cambiar la posicion, pulsamos W,A,S,D mientras mantenemos el click con el ratón
  para movernos en la escena.
  Si salimos en la vista web ya se puede apreciar la caja. Recuerda que la caja es un elemento por defecto pero todos los primitivos acaban siendo entidades.
  Atributos: color, width, height, deepth
  Recuerda que las distancias en Aframe están en metros, dato a tener en cuenta al estar en escala para diseñar las escenas ya que el punto de vista es de una persona.
  Para el primitivo cylinder: color, height, radius, segments-radial, open-ended (para quitar las caras del segmento a true si se quiere quitar y dejar abierto),
  para ver el resto de las caras y no este a la mitad el útlimo atributo: side="double".
  
  
  2.Camera Primitive.
  El elemento camara por defecto se posicion en el modo VR en el 0 0 0 y en el modo escritorio 0 1 0. Cuando se añade un elemento con una imagen se pone en la etiqueta
  <a-assets> <img> la imagen precargada para luego añadirla a un objeto. En Glitch para precargar una imagen desde los assets se copia el link que te ofrece y se 
  pega en el src.
  Con el atributo de camera: user-height podemos aplicar la vista de altura que queramos, en el ejemplo usamos 1.6 que en metros sería la estatura minima de un adulto.
  No usar el atributo position directamente sobre el elemento de a-camera, mejor meter a-camera en a-entity y usar el position en esta etiqueta padre. De esta forma se 
  sincroniza el atributo de la altura de ojo con la posición.
  Eliminaron el user-height en una de las versiones actualizadas asi que se usa de manera similar salvo que solo con position 0 1.6 0.
  Se pueden añadir más de una cámara en la escena, para dar diferentes tipos de vista. Usando el atributo active, añadimos cual quieres que sea la que esta usandose.
  con true o false en las diferentes que haya.
  
  
 3. Position and Relative Positioning.
 Los ejes x y z se corresponden así para declarar la posición de los elementos de la escena.
 Se puede instanciar entidades a otras pasando a relacionarse como padre e hijo, siendo la posición origen del hijo el centro de referencia de la posición del padre.
 Para alinear por ejemplo un circle con la superficie del padre, usar el 0.11? (sobre la depth del objeto padre?) en el eje z de su posición y no quede con reflejos raros superponiendose el otro.
 Tener cuidado cuando ubicamos un objeto fuera del padre puesto que hay que calcular sumandole la distancia de la posicion del objeto que tenemos de referencia.
 Si se cambia la posición del padre la del hijo cambia.
 
 
 4.Rotation and Relative Rotation.
 Es igual que la posicion pero con el atributo de rotation.
 
 
 5.Scale, Relative Scale, and Reflection.
 Podemos escalarar los objetos de la escena con el atributo scale="x x x".
 Hay que tener cuidado cuando al elemento se le ha aplicado previamente otra transformacón porque los ejes en este caso se escalan sobre lo anteriormente
 aplicado. En el ejemplo del video, el eje y tiene aplicada antes una rotación (sobre el cilindro) de 90 grados, entonces cuando aplicamos el escalado a dos,
 no se produce de la misma manera que si no hubieramos aplicado esa rotación, es decir si ha rotado -90 grados en ese eje se escala sobre la nueva posicion de la 
 rotación producida.
 La relatividad de la escala se trabaja de igual manera con la relación de herencia entre padres e hijos.
 Para saber como se transforma a partir de otra, en este caso de una rotación imaginar ejes 
 y rotar el eje los grados aplicados, después a partir de ahi hacer la escala.
 Cuando se usa numeros negativos en las transformaciones es lo que se llama reflection.
 
 
 6.Image Textures and Materials.
 Usame el Assets Manage System para precargar las imagenes de por ejemplo materiales y que no consuma tanta memoria. Se añade poniendo el elemento <a-assets>
 y dentro <img id.. src...> sin cerrar la etiqueta de img.
 Para repetir la textura en el eje X Y se usa el atributo repeat= "1 1" es el default para ambos ejes. 
 El uso de los atributos de la normal se usan sobre todo en desarrollo de videojuegos para dar sombreado realista a las texturas de los assets.
 Los atributos usados para el texturizado de la normal son normal-map, normal-texture-repeat, normal-scale.
 Para que la luz concuerde con la posicion del objeto lo mejor es que el signo de la escala normal concuerde con la del eje de la posición, para que asi el reflejo
 de la luz concuerde.
 Para controlar el reflejo de la luz en la textura usamos el atributo roughness="0.5" por defecto.
 Tambien los atributos los podemos asignar no en la etiqueta del primitivo, si no en un atributo llamado material="color: blue; position:"x x x"; ..
 Cuando además de esto usamos el atributo scale y el eje X lo ponemos a -1 tenemos un efecto muy particular que consiste en que las caras segun vamos rotando se vuelven
 transaparentes (efecto sims) -> creo que lo ha quitado porque a mi no se me aplica.
 Se puede aplicar el atributo roughness a los maeriales por defecto sin definir una textura como imagen.
 El atributo shader tambien es otro efecto sobre el texturizado y puede ser standar (que es con brillo) o flat (Que es opaco sin brillo).
 Para aplicar transparencia al objeto se usa el atributo opacity="0.5"
 
 
 7.Image and Curve Image primitives.
 
 
 




